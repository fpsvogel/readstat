#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative "lib/config"
require_relative "lib/errors"
require_relative "lib/cli"
require_relative "lib/library/library"
require_relative "lib/input"
require_relative "lib/parsable/command"

module Readstat
  @err_block = ->(err) { err.show }
  CLI.load(config.fetch(:item), config.fetch(:output))
  if !ARGV.empty? && File.exist?(ARGV.first)
    config[:load][:path] = ARGV.shift
  end

  library = Library.load(config.fetch(:load), config.fetch(:item), &@err_block)
  Input.new(config.fetch(:input))
       .each_line do |input|
    Command.parse(input, config.fetch(:item))
           .result(library)
           .output(config.fetch(:output))
  rescue InputError, OutputError => e; @err_block.call(e)
  end
rescue AppError => e; @err_block.call(e)
end
